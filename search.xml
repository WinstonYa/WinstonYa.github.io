<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>判断js类型的方式</title>
    <url>/2020/05/26/Javascript_type/</url>
    <content><![CDATA[<h3 id="第一种方式：typeof"><a href="#第一种方式：typeof" class="headerlink" title="第一种方式：typeof"></a>第一种方式：typeof</h3><p><strong>【语法】</strong></p>
<p><code>typeof</code> 运算符后接操作数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typeof</span> operand</span><br><span class="line"><span class="keyword">typeof</span>(operand)</span><br></pre></td></tr></table></figure>

<p><strong>【typeof的返回值】</strong></p>
<p>​    typeof运算符的返回类型为字符串，值包括以下几种：</p>
<p>​        1.<code>String</code>                —&gt; “string”</p>
<p>​        2.<code>Number</code>                —&gt; “number”</p>
<p>​        3.<code>BigInt</code>                —&gt; “bigint”</p>
<p>​        4.<code>Boolean</code>              —&gt;  “boolean”</p>
<p>​        5.<code>Undefine</code>            —&gt;”undefined”</p>
<p>​        6.<code>Object</code>                 —&gt;  “object”</p>
<p>​        7.<code>null</code>                    —&gt; “object” // JavaScript 诞生以来便如此</p>
<p>​        8.<code>function</code>            —&gt;  “function”</p>
<p>​        9.<code>Symbol</code>[ES6新增]                —&gt; “symbol”</p>
<p>​        10.宿主对象（由JS环境提供） —&gt;  * 取决于具体实现*</p>
<p><strong>【typeof为什么要区分object和function？】</strong></p>
<p>​        答案一：《JavaScript高级程序设计》：从技术角度讲，函数在ECMAScript中是对象，不是一种数据类型。然而，函数也确实有一些        特殊的属性，因此通过typeof操作符来区分函数和其他对象是有必要的。</p>
<p>​        答案二：在实际的使用过程中有必要区分Object和Function，所以在typeof这里实现了。</p>
<p><strong>【typeof的不足之处】</strong></p>
<p>​    1.不能区分对象、数组、正则，对它们操作都返回”object”。</p>
<p>​    2.Safar5,Chrome7之前的版本对正则对象返回 “function”。</p>
<p>​    3.在 IE 6, 7 和 8 上，很多宿主对象是对象而不是函数。例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typeof</span> alert === <span class="string">'object'</span></span><br></pre></td></tr></table></figure>

<p>​    4.而在非IE浏览器或则IE9以上（包含IE9）。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typeof</span> alert === <span class="string">'function'</span></span><br></pre></td></tr></table></figure>

<p><strong>【特殊情况】</strong></p>
<ol>
<li><p>Symbol（ES6新增）=&gt; “symbol”。</p>
</li>
<li><p>不能区分对象、数组、正则，返回”object”，正则在Safar5,Chrome7之前的版本中返回”function”。</p>
</li>
<li><p>宿主对象，IE6/7/8返回”object”，其他浏览器返回”function”。</p>
</li>
<li><p>特殊中的特殊:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="number">1</span>/<span class="number">0</span>; <span class="comment">//NaN（这个NaN不是字符串类型，是数值类型）</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">typeof</span> <span class="number">1</span>/<span class="number">0</span>; <span class="comment">//NaN（这个NaN不是字符串类型，是数值类型）</span></span><br><span class="line"><span class="keyword">typeof</span>(<span class="number">1</span>/<span class="number">0</span>); <span class="comment">//"number"</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">typeof</span>(<span class="number">1</span>/<span class="number">0</span>); <span class="comment">//"string"</span></span><br><span class="line"><span class="keyword">typeof</span>(<span class="keyword">typeof</span> <span class="number">1</span>/<span class="number">0</span>); <span class="comment">//"number"</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<p><strong>【示例】</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 数值</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">37</span> === <span class="string">'number'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="number">3.14</span> === <span class="string">'number'</span>;</span><br><span class="line"><span class="keyword">typeof</span>(<span class="number">42</span>) === <span class="string">'number'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Math</span>.LN2 === <span class="string">'number'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">Infinity</span> === <span class="string">'number'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">NaN</span> === <span class="string">'number'</span>; <span class="comment">// 尽管它是 "Not-A-Number" (非数值) 的缩写</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Number</span>(<span class="number">1</span>) === <span class="string">'number'</span>; <span class="comment">// Number 会尝试把参数解析成数值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">42n</span> === <span class="string">'bigint'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="string">''</span> === <span class="string">'string'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="string">'bla'</span> === <span class="string">'string'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="string">`template literal`</span> === <span class="string">'string'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="string">'1'</span> === <span class="string">'string'</span>; <span class="comment">// 注意内容为数字的字符串仍是字符串</span></span><br><span class="line"><span class="keyword">typeof</span> (<span class="keyword">typeof</span> <span class="number">1</span>) === <span class="string">'string'</span>; <span class="comment">// typeof 总是返回一个字符串</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">String</span>(<span class="number">1</span>) === <span class="string">'string'</span>; <span class="comment">// String 将任意值转换为字符串，比 toString 更安全</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 布尔值</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">true</span> === <span class="string">'boolean'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">false</span> === <span class="string">'boolean'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Boolean</span>(<span class="number">1</span>) === <span class="string">'boolean'</span>; <span class="comment">// Boolean() 会基于参数是真值还是虚值进行转换</span></span><br><span class="line"><span class="keyword">typeof</span> !!(<span class="number">1</span>) === <span class="string">'boolean'</span>; <span class="comment">// 两次调用 ! (逻辑非) 操作符相当于 Boolean()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Symbols</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Symbol</span>() === <span class="string">'symbol'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Symbol</span>(<span class="string">'foo'</span>) === <span class="string">'symbol'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Symbol</span>.iterator === <span class="string">'symbol'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Undefined</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span> === <span class="string">'undefined'</span>;</span><br><span class="line"><span class="keyword">typeof</span> declaredButUndefinedVariable === <span class="string">'undefined'</span>;</span><br><span class="line"><span class="keyword">typeof</span> undeclaredVariable === <span class="string">'undefined'</span>; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;<span class="attr">a</span>: <span class="number">1</span>&#125; === <span class="string">'object'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 Array.isArray 或者 Object.prototype.toString.call</span></span><br><span class="line"><span class="comment">// 区分数组和普通对象</span></span><br><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>] === <span class="string">'object'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Date</span>() === <span class="string">'object'</span>;</span><br><span class="line"><span class="keyword">typeof</span> /regex/ === <span class="string">'object'</span>; <span class="comment">// 历史结果请参阅正则表达式部分</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面的例子令人迷惑，非常危险，没有用处。避免使用它们。</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Boolean</span>(<span class="literal">true</span>) === <span class="string">'object'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1</span>) === <span class="string">'object'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">'abc'</span>) === <span class="string">'object'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125; === <span class="string">'function'</span>;</span><br><span class="line"><span class="keyword">typeof</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span> </span>&#123;&#125; === <span class="string">'function'</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Math</span>.sin === <span class="string">'function'</span>;</span><br></pre></td></tr></table></figure>

<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof" target="_blank" rel="noopener">具体方法请参考</a></p>
<h3 id="第二种方式：instanceof"><a href="#第二种方式：instanceof" class="headerlink" title="第二种方式：instanceof"></a>第二种方式：instanceof</h3><p><strong>【原理】</strong></p>
<p><strong><code>instanceof</code></strong> <strong>运算符</strong>用于检测构造函数的 <code>prototype</code> 属性是否出现在某个实例对象的原型链上。</p>
<p><strong>【语法】</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">object <span class="keyword">instanceof</span> <span class="keyword">constructor</span></span><br></pre></td></tr></table></figure>

<p><strong>参数：</strong></p>
<p><code>object</code>：某个实例对象</p>
<p><code>constructor</code>：构造函数</p>
<p><strong>【示例】</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params"></span>)</span>&#123;&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">D</span>(<span class="params"></span>)</span>&#123;&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = <span class="keyword">new</span> C();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">o <span class="keyword">instanceof</span> C; <span class="comment">// true，因为 Object.getPrototypeOf(o) === C.prototype</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">o <span class="keyword">instanceof</span> D; <span class="comment">// false，因为 D.prototype 不在 o 的原型链上</span></span><br><span class="line"></span><br><span class="line">o <span class="keyword">instanceof</span> <span class="built_in">Object</span>; <span class="comment">// true，因为 Object.prototype.isPrototypeOf(o) 返回 true</span></span><br><span class="line">C.prototype <span class="keyword">instanceof</span> <span class="built_in">Object</span> <span class="comment">// true，同上</span></span><br><span class="line"></span><br><span class="line">C.prototype = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> o2 = <span class="keyword">new</span> C();</span><br><span class="line"></span><br><span class="line">o2 <span class="keyword">instanceof</span> C; <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">o <span class="keyword">instanceof</span> C; <span class="comment">// false，C.prototype 指向了一个空对象,这个空对象不在 o 的原型链上.</span></span><br><span class="line"></span><br><span class="line">D.prototype = <span class="keyword">new</span> C(); <span class="comment">// 继承</span></span><br><span class="line"><span class="keyword">var</span> o3 = <span class="keyword">new</span> D();</span><br><span class="line">o3 <span class="keyword">instanceof</span> D; <span class="comment">// true</span></span><br><span class="line">o3 <span class="keyword">instanceof</span> C; <span class="comment">// true 因为 C.prototype 现在在 o3 的原型链上</span></span><br></pre></td></tr></table></figure>

<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof" target="_blank" rel="noopener">具体方法请参考</a></p>
<h3 id="第三种方式：-Object-prototype-toString-call"><a href="#第三种方式：-Object-prototype-toString-call" class="headerlink" title="第三种方式： Object.prototype.toString.call()"></a>第三种方式： Object.prototype.toString.call()</h3><p><strong>【语法】</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Object</span>.prototype.toString.call()</span><br></pre></td></tr></table></figure>

<p><strong>【示例】</strong></p>
<p>可以通过 <code>toString()</code> 来获取每个对象的类型。为了每个对象都能通过 <code>Object.prototype.toString()</code> 来检测，需要以 <code>Function.prototype.call()</code> 或者 <code>Function.prototype.apply()</code> 的形式来调用，传递要检查的对象作为第一个参数，称为 <code>thisArg</code>。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> toString = <span class="built_in">Object</span>.prototype.toString;</span><br><span class="line"></span><br><span class="line">toString.call(<span class="keyword">new</span> <span class="built_in">Date</span>); <span class="comment">// [object Date]</span></span><br><span class="line">toString.call(<span class="keyword">new</span> <span class="built_in">String</span>); <span class="comment">// [object String]</span></span><br><span class="line">toString.call(<span class="built_in">Math</span>); <span class="comment">// [object Math]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Since JavaScript 1.8.5</span></span><br><span class="line">toString.call(<span class="literal">undefined</span>); <span class="comment">// [object Undefined]</span></span><br><span class="line">toString.call(<span class="literal">null</span>); <span class="comment">// [object Null]</span></span><br></pre></td></tr></table></figure>

<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString" target="_blank" rel="noopener">具体方法请参考</a></p>
<h3 id="第四种方式：-Array-isArray"><a href="#第四种方式：-Array-isArray" class="headerlink" title="第四种方式： Array.isArray()"></a>第四种方式： Array.isArray()</h3><p><strong>【语法】</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Array</span>.isArray(obj) <span class="comment">//Array.isArray() 用于判断传递的值是否是一个数组。</span></span><br></pre></td></tr></table></figure>

<p><strong>【示例】</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 下面的函数调用都返回 true</span></span><br><span class="line"><span class="built_in">Array</span>.isArray([]);</span><br><span class="line"><span class="built_in">Array</span>.isArray([<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Array</span>());</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>))</span><br><span class="line"><span class="comment">// 鲜为人知的事实：其实 Array.prototype 也是一个数组。</span></span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="built_in">Array</span>.prototype); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面的函数调用都返回 false</span></span><br><span class="line"><span class="built_in">Array</span>.isArray();</span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123;&#125;);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">null</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">undefined</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="number">17</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="string">'Array'</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">true</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">Array</span>.isArray(<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(<span class="number">32</span>))</span><br><span class="line"><span class="built_in">Array</span>.isArray(&#123; <span class="attr">__proto__</span>: <span class="built_in">Array</span>.prototype &#125;);</span><br></pre></td></tr></table></figure>

<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray" target="_blank" rel="noopener">具体方法请参考</a></p>
]]></content>
      <categories>
        <category>前端面试题</category>
        <category>Javascript原理</category>
      </categories>
      <tags>
        <tag>前端面试</tag>
      </tags>
  </entry>
  <entry>
    <title>简单实现Node的Events模块</title>
    <url>/2020/07/02/Node-Events/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> EventEmitter = <span class="built_in">require</span>(<span class="string">'events'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyEmitter</span> <span class="keyword">extends</span> <span class="title">EventEmitter</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> myEmitter = <span class="keyword">new</span> MyEmitter();</span><br><span class="line">myEmitter.on(<span class="string">'event'</span>, () =&gt; &#123;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'an event occurred'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">myEmitter.emit(<span class="string">'event'</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端面试题</category>
        <category>面试题汇总</category>
      </categories>
      <tags>
        <tag>前端面试</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-lifecycle</title>
    <url>/2020/07/09/Vue-lifecycle/</url>
    <content><![CDATA[<h1 id="Vue生命周期"><a href="#Vue生命周期" class="headerlink" title="Vue生命周期"></a>Vue生命周期</h1><p><strong>vue生命周期：从Vue实例创建、运行、到销毁期间，总是伴随着各种各样的事件，这些事件，统称为生命周期！</strong></p>
<p><img src="/2020/07/09/Vue-lifecycle/vue_lifecycle.png" alt></p>
<p>beforeCreate // 调用该生命周期前已初始化生命周期，事件和渲染函数，不能访问到props等属性</p>
<p>created // 调用该生命周期前已顺序初始化具体的数据—— injections =&gt; props =&gt; methods =&gt; data =&gt; computed =&gt; watch =&gt; initProvide</p>
<p>beforeMount // 调用该生命周期前已初始化渲染函数$options.render</p>
<p>mounted // 调用该生命周期前已渲染真实节点</p>
<p>beforeUpdate // 状态改变时，会在nextTick中更新视图前调用</p>
<p>updated // 已调用render函数重新渲染</p>
<p>activated // keep-alive缓存组件渲染时调用(mounted前会渲染一次，每次updated前也会渲染一次)</p>
<p>deactivated // keep-alive缓存组件销毁后调用</p>
<p>beforeDestroy</p>
<p>destroyed</p>
<p>errorCaptured</p>
]]></content>
      <categories>
        <category>前端面试题</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端面试</tag>
      </tags>
  </entry>
  <entry>
    <title>给出一个区间的集合，请合并所有重叠的区间。</title>
    <url>/2020/07/02/arithmetic-gather/</url>
    <content><![CDATA[<p>输入: [[1,3],[2,6],[8,10],[15,18]]<br>输出: [[1,6],[8,10],[15,18]]<br>解释: 区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [</span><br><span class="line">        [<span class="number">1</span>, <span class="number">3</span>],</span><br><span class="line">        [<span class="number">2</span>, <span class="number">6</span>],</span><br><span class="line">        [<span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">        [<span class="number">15</span>, <span class="number">18</span>],</span><br><span class="line">      ];</span><br><span class="line"></span><br><span class="line">        arr = arr.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a[<span class="number">0</span>] - b[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">          <span class="keyword">const</span> a2 = arr[i][<span class="number">1</span>],</span><br><span class="line">            b1 = arr[i + <span class="number">1</span>][<span class="number">0</span>],</span><br><span class="line">            b2 = arr[i + <span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">          <span class="keyword">if</span> (a2 &gt;= b1) &#123;</span><br><span class="line">            arr[i][<span class="number">1</span>] = a2 &gt; b2 ? a2 : b2;</span><br><span class="line">            arr.splice(i + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">            i--;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="built_in">console</span>.log(arr)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// let tempMin = [];</span></span><br><span class="line">      <span class="comment">// let tempMax = [];</span></span><br><span class="line">      <span class="comment">// let temp = [];</span></span><br><span class="line">      <span class="comment">// let item = arr.map((data) =&gt; &#123;</span></span><br><span class="line">      <span class="comment">//   let min = Math.min(...data);</span></span><br><span class="line">      <span class="comment">//   tempMin.push(min);</span></span><br><span class="line">      <span class="comment">//   let max = Math.max(...data);</span></span><br><span class="line">      <span class="comment">//   tempMax.push(max);</span></span><br><span class="line">      <span class="comment">// &#125;);</span></span><br><span class="line">      <span class="comment">// for (let i = 0; i &lt; tempMin.length; i++) &#123;</span></span><br><span class="line">      <span class="comment">//   if (tempMin[i + 1] &lt;= tempMax[i]) &#123;</span></span><br><span class="line">      <span class="comment">//     tempMin.splice(tempMin[i], 1);</span></span><br><span class="line">      <span class="comment">//     tempMax.splice(tempMax[i-1], 1);</span></span><br><span class="line">      <span class="comment">//     i--;</span></span><br><span class="line">      <span class="comment">//   &#125;</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="comment">// tempMin.map((data, index) =&gt; &#123;</span></span><br><span class="line">      <span class="comment">//   temp.push([data, tempMax[index]]);</span></span><br><span class="line">      <span class="comment">// &#125;);</span></span><br><span class="line">      <span class="comment">// console.log(temp);</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//仅匹配没有连续相同项的数组</span></span><br><span class="line">      <span class="comment">// let all = []</span></span><br><span class="line">      <span class="comment">// let show = false</span></span><br><span class="line">      <span class="comment">// for(let i = 0; i &lt; arr.length; i ++)&#123;</span></span><br><span class="line">      <span class="comment">//   if(show) &#123;</span></span><br><span class="line">      <span class="comment">//     show = false</span></span><br><span class="line">      <span class="comment">//     continue</span></span><br><span class="line">      <span class="comment">//   &#125;</span></span><br><span class="line">      <span class="comment">//   if(arr[i+1] &amp;&amp; arr[i][1] &gt;= arr[i+1][0]) &#123;</span></span><br><span class="line">      <span class="comment">//     all.push([arr[i][0], arr[i+1][1]])</span></span><br><span class="line">      <span class="comment">//     show = true</span></span><br><span class="line">      <span class="comment">//     continue</span></span><br><span class="line">      <span class="comment">//   &#125;</span></span><br><span class="line">      <span class="comment">//   all.push(arr[i])</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="comment">// console.log(all)</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端面试题</category>
        <category>面试题汇总</category>
      </categories>
      <tags>
        <tag>前端面试</tag>
      </tags>
  </entry>
  <entry>
    <title>html/css</title>
    <url>/2020/05/21/htm&amp;css_1/</url>
    <content><![CDATA[<h2 id="1-flex-0-1-auto-表示什么意思"><a href="#1-flex-0-1-auto-表示什么意思" class="headerlink" title="1. flex: 0 1 auto 表示什么意思"></a>1. flex: 0 1 auto 表示什么意思</h2><p>​        flex: 0 1 auto 其实就是弹性盒子的默认值，表示 <code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code> 的简写，分别表示放大比例、缩小比例、分配多余空间之前占据的主轴空间.</p>
<p>​        1.flex-grow属性定义项目的放大比例，默认为零，即如果存在剩余空间，也不放大。</p>
<p>​        2.flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p>
<p>​        3.flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间，如果设置了width，则跟随width，如果没有设置width，则为内容实际宽度。</p>
]]></content>
      <categories>
        <category>前端面试题</category>
        <category>html/css</category>
      </categories>
      <tags>
        <tag>前端面试</tag>
      </tags>
  </entry>
  <entry>
    <title>手写一个localStorage</title>
    <url>/2020/07/02/localStorage/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStorage</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">this</span>.prefix = <span class="string">'pro_'</span>;</span><br><span class="line">    <span class="keyword">this</span>.storage = <span class="built_in">window</span>.localStorage;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// exp/秒，默认 60 * 60 * 24 = 1 天</span></span><br><span class="line">  <span class="keyword">set</span>(key, value, exp = 60 * 60 * 24) &#123;</span><br><span class="line">    <span class="keyword">const</span> timestamp = <span class="built_in">Date</span>.now();</span><br><span class="line">    <span class="keyword">const</span> data = <span class="built_in">JSON</span>.stringify(&#123; value, exp, timestamp &#125;);</span><br><span class="line">    <span class="keyword">const</span> prefixKey = <span class="keyword">this</span>.prefix + key;</span><br><span class="line">    <span class="keyword">this</span>.storage.setItem(prefixKey, data);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span>(key) &#123;</span><br><span class="line">    <span class="keyword">const</span> prefixKey = <span class="keyword">this</span>.prefix + key;</span><br><span class="line">    <span class="keyword">let</span> data = <span class="keyword">this</span>.storage.getItem(prefixKey);</span><br><span class="line">    <span class="keyword">if</span> (!data) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    data = <span class="built_in">JSON</span>.parse(data);</span><br><span class="line">    <span class="keyword">const</span> exp = data.exp * <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; timestamp &#125; = data;</span><br><span class="line">    <span class="keyword">const</span> &#123; value &#125; = data;</span><br><span class="line">    <span class="keyword">const</span> dataNow = <span class="built_in">Date</span>.now();</span><br><span class="line">    <span class="keyword">if</span> (dataNow &gt; timestamp + exp) &#123;</span><br><span class="line">      <span class="keyword">this</span>.delete(key);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">delete</span>(key) &#123;</span><br><span class="line">    <span class="keyword">const</span> prefixKey = <span class="keyword">this</span>.prefix + key;</span><br><span class="line">    <span class="keyword">this</span>.storage.removeItem(prefixKey);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> MyStorage;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端面试题</category>
        <category>面试题汇总</category>
      </categories>
      <tags>
        <tag>前端面试</tag>
      </tags>
  </entry>
  <entry>
    <title>git升级方法</title>
    <url>/2020/07/12/git-update/</url>
    <content><![CDATA[<h2 id="本地打开Git，输入git-update-git-for-windows"><a href="#本地打开Git，输入git-update-git-for-windows" class="headerlink" title="本地打开Git，输入git update-git-for-windows"></a>本地打开Git，输入<code>git update-git-for-windows</code></h2>]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序弹出输入框的实现</title>
    <url>/2020/06/23/pop-up/</url>
    <content><![CDATA[<h2 id="指定-modal-弹出框"><a href="#指定-modal-弹出框" class="headerlink" title="指定 modal 弹出框"></a>指定 modal 弹出框</h2><p>​        在微信小程序的开发过程中，需要用到弹出输入框组件，但是在目前微信小程序当中并没有可以直接引用的弹出输入框的组件，在网上找了很多资料，接下来写一个可以应用的组件。</p>
<p><strong>常用属性</strong></p>
<table>
<thead>
<tr>
<th>属性名</th>
<th>类型</th>
<th>默认值</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>title</td>
<td>String</td>
<td></td>
<td>标题</td>
</tr>
<tr>
<td>hidden</td>
<td>Boolean</td>
<td>false</td>
<td>是否隐藏整个弹框</td>
</tr>
<tr>
<td>no-cancel</td>
<td>Boolean</td>
<td>false</td>
<td>是否隐藏 cancel 按钮</td>
</tr>
<tr>
<td>confirm-text</td>
<td>String</td>
<td>确定</td>
<td>confirm 按钮文字</td>
</tr>
<tr>
<td>cancel-text</td>
<td>String</td>
<td>取消</td>
<td>cancel 按钮文字</td>
</tr>
<tr>
<td>bindconfirm</td>
<td>EventHandle</td>
<td></td>
<td>点击确认触发的回调</td>
</tr>
<tr>
<td>bindcancel</td>
<td>EventHandle</td>
<td></td>
<td>点击取消以及蒙层触发的回调</td>
</tr>
</tbody></table>
<p><strong>示例代码</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- show.html--&gt;</span><br><span class="line">&lt;!-- 创建团队按钮 --&gt;</span><br><span class="line">  &lt;button</span><br><span class="line">    <span class="class"><span class="keyword">class</span></span>=<span class="string">"create-team"</span></span><br><span class="line">    hover-<span class="class"><span class="keyword">class</span></span>=<span class="string">"btn_hover"</span></span><br><span class="line">    type=<span class="string">"primary"</span></span><br><span class="line">    hidden=<span class="string">"&#123;&#123;hiddenName&#125;&#125;"</span></span><br><span class="line">    bindtap=<span class="string">"modalInput"</span>&gt;</span><br><span class="line">    创建团队</span><br><span class="line">  &lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">  &lt;modal</span></span><br><span class="line"><span class="regexp">    hidden="&#123;&#123;hiddenmodalput&#125;&#125;"</span></span><br><span class="line"><span class="regexp">    title="输入团队名称"</span></span><br><span class="line"><span class="regexp">    confirm-text="确认"</span></span><br><span class="line"><span class="regexp">    cancel-text="取消"</span></span><br><span class="line"><span class="regexp">    bindcancel="cancel"</span></span><br><span class="line"><span class="regexp">    bindconfirm="confirm"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;input type='text' placeholder="请输入内容" auto-focus /</span>&gt;</span><br><span class="line">  &lt;<span class="regexp">/modal&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>js 的写法</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    <span class="comment">//通过hidden属性控制弹框的显示和隐藏</span></span><br><span class="line">    hiddenmodalput: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  modalInput() &#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123; <span class="attr">hiddenmodalput</span>: !hiddenmodalput &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//取消按钮</span></span><br><span class="line">  cancel() &#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      hiddenmodalput: <span class="literal">true</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//确认按钮</span></span><br><span class="line">  confirm() &#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      hiddenmodalput: <span class="literal">true</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><strong>绑定 input 事件</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;input</span><br><span class="line">  type=<span class="string">"text"</span></span><br><span class="line">  placeholder=<span class="string">"请输入内容"</span></span><br><span class="line">  auto-focus</span><br><span class="line">  name=<span class="string">"inpval"</span></span><br><span class="line">  bindinput=<span class="string">"jsInput"</span></span><br><span class="line">/&gt;;</span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    hiddenmodalput: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//可以通过hidden是否掩藏弹出框的属性，来指定那个弹出框</span></span><br><span class="line">    inpval: <span class="string">""</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//获取用户输入的input的值</span></span><br><span class="line">  jsInput: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123; <span class="attr">inpval</span>: e.detail.value &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//确认</span></span><br><span class="line">  confirm: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.data.inpval);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>第1题：[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].map(parseInt) what &amp; why ?</title>
    <url>/2020/05/23/question-1/</url>
    <content><![CDATA[<ul>
<li><p>先看一下<strong>map</strong>的语法：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> new_array = arr.map(<span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">currentValue[, index[, array]]</span>) </span>&#123;</span><br><span class="line"> <span class="comment">// Return element for new_array </span></span><br><span class="line">&#125;[, thisArg])</span><br></pre></td></tr></table></figure>

<p><strong>callback</strong>生成新数组元素的函数，使用三个参数：</p>
<ul>
<li><p><strong>currentValue</strong>：callback数组正在处理的当前元素。</p>
</li>
<li><p><strong>index</strong> （可选）：callback数组中正在处理的当前元素的索引。</p>
</li>
<li><p><strong>array</strong>（可选）：map方法调用的数组。</p>
</li>
<li><p><strong>thisArg</strong>（可选）：执行callback函数时值被用作this。</p>
</li>
</ul>
<p><strong>返回值</strong>：回调函数的结果组成了一个新的数组。</p>
</li>
<li><h3 id="parseInt"><a href="#parseInt" class="headerlink" title="parseInt"></a>parseInt</h3><p>parseInt()函数解析一个字符串参数，并返回一个指定基数的整数(数学系统的基础)。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(string, radix)</span><br></pre></td></tr></table></figure>

<ul>
<li><p><code>string</code>要被解析的值。如果参数不是一个字符串，则将其转换为字符串（使用ToString抽象操作）。字符串开头的空白符将会被忽略。</p>
</li>
<li><p><code>radix</code>表示要解析的数字的基数。该值介于 2 ~ 36 之间。</p>
<p>如果省略该参数或其值为 0，则数字将以 10 为基础来解析。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。</p>
<p>如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN。</p>
</li>
</ul>
</li>
</ul>
<p>  在<code>radix</code>为 undefined，或者<code>radix</code>为 0 或者没有指定的情况下，JavaScript 作如下处理：</p>
<ul>
<li><p>如果字符串 string 以”0x”或者”0X”开头, 则基数是16 (16进制).</p>
</li>
<li><p>如果字符串 string 以”0”开头, 基数是8（八进制）或者10（十进制），那么具体是哪个基数由实现环境决定。ECMAScript 5 规定使用10，但是并不是所有的浏览器都遵循这个规定。因此，永远都要明确给出radix参数的值。</p>
</li>
<li><p>如果字符串 string 以其它任何值开头，则基数是10 (十进制)。</p>
</li>
</ul>
<p>  例子：parseInt(“444”,16) 表示将16进制的444转换成10进制的数，结果为1092。</p>
<h2 id="本题解析："><a href="#本题解析：" class="headerlink" title="本题解析："></a>本题解析：</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>].map(<span class="built_in">parseInt</span>)</span><br></pre></td></tr></table></figure>

<p>实际执行代码为：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>].map(<span class="function">(<span class="params">data,index</span>) =&gt;</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">parseInt</span>(data,index)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>返回值为：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="string">'1'</span>,<span class="number">0</span>) <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'2'</span>,<span class="number">1</span>) <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'3'</span>,<span class="number">2</span>) <span class="comment">// NaN, 3&gt;2,因此3不是2进制数</span></span><br></pre></td></tr></table></figure>

<p>所以本题答案：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>].map(<span class="built_in">parseInt</span>);</span><br><span class="line"><span class="comment">// [1,NaN,NaN]</span></span><br></pre></td></tr></table></figure>



<p><strong>扩展题</strong>：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[<span class="string">'10'</span>,<span class="string">'10'</span>,<span class="string">'10'</span>,<span class="string">'10'</span>,<span class="string">'10'</span>].map(<span class="built_in">parseInt</span>);</span><br><span class="line"><span class="comment">// [10,NaN,2,3,4]</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'10'</span>,<span class="number">0</span>) <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'10'</span>,<span class="number">1</span>) <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'10'</span>,<span class="number">2</span>) <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'10'</span>,<span class="number">3</span>) <span class="comment">// 3</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">'10'</span>,<span class="number">4</span>) <span class="comment">// 4</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端面试题</category>
        <category>javascript基础</category>
      </categories>
      <tags>
        <tag>前端面试</tag>
      </tags>
  </entry>
  <entry>
    <title>specification</title>
    <url>/2020/08/13/specification/</url>
    <content><![CDATA[<h1 id="前端风格规范"><a href="#前端风格规范" class="headerlink" title="前端风格规范"></a>前端风格规范</h1><p>Author：@Winston Wong</p>
<p>Date：2020.06.12</p>
<p>Keywords：less、babel、router、vuex、eslint、unit-jest</p>
<h2 id="一、框架的选择"><a href="#一、框架的选择" class="headerlink" title="一、框架的选择"></a>一、框架的选择</h2><p><a href="https://cn.vuejs.org/" target="_blank" rel="noopener">Vue.js 官方文档</a>     <a href="https://cli.vuejs.org/zh" target="_blank" rel="noopener">Vue CLI 官方文档</a></p>
<p>在官网的指引下，下载 @vue/cli 后，运行 vue create 项目名 来创建一个新项目，你会被提示选取一个 preset，若已有符合风格规范的设置，可直接选择，如：</p>
<p><img src="/2020/08/13/specification/preset.png" alt></p>
<p>否则选“手动选择特性”（Manually select features）来选取需要的特性，步骤如下：</p>
<ol>
<li><p>Check the features needed for your project：</p>
<p>​    Babel</p>
<p>​    Router</p>
<p>​    Vuex</p>
<p>​    CSS Pre-processors</p>
<p>​    Linter / Formatter</p>
<p>​    Unit Testing</p>
</li>
<li><p>Use history mode for router?           Y</p>
</li>
<li><p>Pick a CSS pre-processor：               Less</p>
</li>
<li><p>Pick a linter / formatter config：      ESLint + Prettier</p>
</li>
<li><p>Pick additional lint features：           Lint on save，Lint and fix on commit</p>
</li>
<li><p>Pick a unit testing solution：             Jest</p>
</li>
</ol>
<p>过程图如下：</p>
<p><img src="/2020/08/13/specification/preset-1.png" alt></p>
<p><img src="/2020/08/13/specification/preset-2.png" alt></p>
<p><img src="/2020/08/13/specification/preset-3.png" alt></p>
<p><img src="/2020/08/13/specification/preset-4.png" alt></p>
<p><img src="/2020/08/13/specification/preset-5.png" alt></p>
<p><img src="/2020/08/13/specification/preset-6.png" alt></p>
<p>配置中的 ESLint 主要负责代码规则校验，Prettier 主要负责代码风格优化，它们主要依赖的插件如下：</p>
<ul>
<li><p><a href="https://prettier.io/" target="_blank" rel="noopener">Perttier</a>：代码格式化工具</p>
</li>
<li><p><a href="https://eslint.org/docs/user-guide/getting-started" target="_blank" rel="noopener">eslint(recommended)</a>：eslint 中包含的推荐规则</p>
</li>
<li><p><a href="https://github.com/prettier/eslint-plugin-prettier" target="_blank" rel="noopener">eslint-plugin-prettier</a>：eslint 中使用 prettier 进行检查</p>
</li>
<li><p><a href="https://github.com/prettier/eslint-config-prettier" target="_blank" rel="noopener">eslint-config-prettier</a>：用于解决 eslint 与 prettier 的规则冲突</p>
</li>
</ul>
<h2 id="二、配置-commitlint"><a href="#二、配置-commitlint" class="headerlink" title="二、配置 commitlint"></a>二、配置 commitlint</h2><p>1、Vue CLI 手脚架生成后，配置 commitlint，下载依赖包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yarn add -D @commitlint&#x2F;&#123;cli,config-conventional&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><a href="https://commitlint.js.org/" target="_blank" rel="noopener">@commitlint/cli</a>：脚手架基础设施</p>
</li>
<li><p><a href="https://github.com/conventional-changelog/commitlint" target="_blank" rel="noopener">@commitlint/config-conventional</a>：官方推荐规则</p>
</li>
</ul>
<p>2、根目录下新建 commitlint.config.js 文件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// commitlint.config.js</span></span><br><span class="line">*<span class="built_in">module</span>*.*exports* = &#123;</span><br><span class="line"> extends: [<span class="string">"@commitlint/config-conventional"</span>]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>3、修改 package.json，添加 git commit 钩子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line"> *<span class="string">"gitHooks"</span>*: &#123;</span><br><span class="line">  *<span class="string">"pre-commit"</span>*: <span class="string">"lint-staged"</span>,</span><br><span class="line">  *<span class="string">"commit-msg"</span>*: <span class="string">"commitlint -E GIT_PARAMS"</span>     <span class="comment">// 添加 git commit 钩子</span></span><br><span class="line"> &#125;,</span><br><span class="line"> *<span class="string">"lint-staged"</span>*: &#123;</span><br><span class="line">  *<span class="string">"\*.&#123;js,jsx,vue&#125;"</span>*: [</span><br><span class="line">   <span class="string">"vue-cli-service lint"</span>,</span><br><span class="line">   <span class="string">"git add"</span></span><br><span class="line">  ]</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4、Commit message 的格式：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;   // Header 是必需的</span><br><span class="line">&lt;body&gt;             // Body 可以省略</span><br><span class="line">&lt;footer&gt;            // Footer 可以省略</span><br></pre></td></tr></table></figure>

<p>Header部分只有一行，包括三个字段：</p>
<ul>
<li>type（必需）：用于说明 commit 的类别，标识为：<ul>
<li>feat：新功能（feature）</li>
<li>fix：修补 bug</li>
<li>docs：文档（documentation）</li>
<li>style： 格式（不影响代码运行的变动）</li>
<li>refactor：重构（即不是新增功能，也不是修改 bug 的代码变动）、</li>
<li>test：增加测试</li>
<li>chore：构建过程或辅助工具的变动</li>
</ul>
</li>
<li>scope（可选）：用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</li>
<li>subject（必需）：是 commit 目的的简短描述，不超过 50 个字符：<ul>
<li>以动词开头，使用第一人称现在时，比如 change，而不是 changed 或 changes</li>
<li>第一个字母小写</li>
<li>结尾不加句号（.）</li>
</ul>
</li>
</ul>
<h2 id="三、选配依赖包"><a href="#三、选配依赖包" class="headerlink" title="三、选配依赖包"></a>三、选配依赖包</h2><h3 id="1、element-ui"><a href="#1、element-ui" class="headerlink" title="1、element-ui"></a>1、element-ui</h3><p>下载依赖包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yarn add element-ui</span><br></pre></td></tr></table></figure>

<p>修改 src 目录下的 main.js 文件，全局引用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./App.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"./router"</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">"./store"</span>;</span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">"element-ui"</span>;          <span class="comment">// 引入 element-ui</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"element-ui/lib/theme-chalk/index.css"</span>;     <span class="comment">// 全局引用样式</span></span><br><span class="line">Vue.use(ElementUI);                  <span class="comment">// 全局使用 element-ui</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line"> router,</span><br><span class="line"> store,</span><br><span class="line"> render: *h* *=&gt;* h(App)</span><br><span class="line">&#125;).$mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure>

<p>使用方法详见文档：<a href="https://element.eleme.cn/" target="_blank" rel="noopener">element-ui 官方文档</a></p>
<h3 id="2、nprogress"><a href="#2、nprogress" class="headerlink" title="2、nprogress"></a>2、nprogress</h3><p>下载依赖包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yarn add nprogress</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/rstacruz/nprogress" target="_blank" rel="noopener">github 传送门</a></p>
<h3 id="3、svg-sprite-loader"><a href="#3、svg-sprite-loader" class="headerlink" title="3、svg-sprite-loader"></a>3、svg-sprite-loader</h3><p>下载依赖包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yarn add -D svg-sprite-loader</span><br></pre></td></tr></table></figure>

<p>新建 / 修改 vue.config.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">*<span class="keyword">const</span>* path = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line">*<span class="function"><span class="keyword">function</span>* <span class="title">resolve</span>(<span class="params">*dir*</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> path.join(__dirname, *dir*);</span><br><span class="line">&#125;</span><br><span class="line">*<span class="built_in">module</span>*.*exports* = &#123;</span><br><span class="line"> chainWebpack: *config* *=&gt;* &#123;</span><br><span class="line">  <span class="comment">// set svg-sprite-loader</span></span><br><span class="line">  *config*.module</span><br><span class="line">   .rule(<span class="string">"svg"</span>)</span><br><span class="line">   .exclude.add(resolve(<span class="string">"src/plugins/icons/svg"</span>))</span><br><span class="line">   .end();</span><br><span class="line">  *config*.module</span><br><span class="line">   .rule(<span class="string">"icons"</span>)</span><br><span class="line">   .test(<span class="regexp">/\.svg$/</span>)</span><br><span class="line">   .include.add(resolve(<span class="string">"src/plugins/icons/svg"</span>))</span><br><span class="line">   .end()</span><br><span class="line">   .use(<span class="string">"svg-sprite-loader"</span>)</span><br><span class="line">   .loader(<span class="string">"svg-sprite-loader"</span>)</span><br><span class="line">   .options(&#123;</span><br><span class="line">    symbolId: <span class="string">"icon-[name]"</span></span><br><span class="line">   &#125;)</span><br><span class="line">   .end();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>src 目录下新增 plugins 目录，plugins 目录下新增 icons 目录：</p>
<p>@/plugins/icons/index.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> svg <span class="keyword">from</span> <span class="string">"./index.vue"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"> install: *<span class="function"><span class="keyword">function</span>*(<span class="params">*Vue*</span>) </span>&#123;</span><br><span class="line">  *<span class="keyword">const</span>* requireAll = *requireContext* *=&gt;*</span><br><span class="line">   *requireContext*.keys().map(*requireContext*);</span><br><span class="line">  *<span class="keyword">const</span>* req = <span class="built_in">require</span>.context(<span class="string">"./svg"</span>, <span class="literal">false</span>, /\.svg$/);</span><br><span class="line">  requireAll(req);</span><br><span class="line">  *Vue*.component(svg.name, svg);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>@/plugins/icons/index.vue：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;svg <span class="class"><span class="keyword">class</span></span>=<span class="string">"svg-icon"</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">"svgClass"</span>&gt;</span><br><span class="line">    &lt;use :xlink:href=<span class="string">"iconName"</span>&gt;&lt;<span class="regexp">/use&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>svg&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  name: "IconSvg",</span></span><br><span class="line"><span class="regexp">  props: &#123;</span></span><br><span class="line"><span class="regexp">    svgClass: &#123;</span></span><br><span class="line"><span class="regexp">      type: String</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    svgName: &#123;</span></span><br><span class="line"><span class="regexp">      type: String,</span></span><br><span class="line"><span class="regexp">      required: true</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  computed: &#123;</span></span><br><span class="line"><span class="regexp">    iconName() &#123;</span></span><br><span class="line"><span class="regexp">      return `#icon-$&#123;this.svgName&#125;`;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=<span class="string">"less"</span>&gt;</span><br><span class="line">.svg-icon &#123;</span><br><span class="line">  width: <span class="number">1</span>em;</span><br><span class="line">  height: <span class="number">1</span>em;</span><br><span class="line">  vertical-align: <span class="number">-0.15</span>em;</span><br><span class="line">  fill: currentColor;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure>



<p>@/plugins/icons/svg目录：（存放 svg 文件）</p>
<p><img src="/2020/08/13/specification/svg.png" alt></p>
<p>svg 文件参考：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> standalone=<span class="string">"no"</span>?&gt;&lt;!DOCTYPE svg PUBLIC <span class="string">"-//W3C//DTD SVG 1.1//EN"</span> <span class="string">"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">t</span>=<span class="string">"1583823818343"</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 1024 1024"</span> <span class="attr">version</span>=<span class="string">"1.1"</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">p-id</span>=<span class="string">"14478"</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M908.864 206.656c-11.52-12.096-24.768-18.432-39.872-19.072h-10.88c-38.08 6.08-71.36 11.968-99.776 17.664-28.416 5.76-51.392 11.648-68.928 17.664-14.528 2.432-34.624 9.536-60.288 21.312-25.728 11.776-55.744 27.648-90.24 47.616-17.536 6.08-35.072 6.08-52.608 0-35.072-16.896-65.024-31.424-89.792-43.52l-55.296-25.408c-19.968-6.016-43.84-11.904-71.616-17.664-27.84-5.76-61.952-11.648-102.464-17.664h-11.776c-17.536 0.64-31.424 6.976-41.728 19.072-10.304 12.096-15.744 27.2-16.32 45.312v440.704c0.576 15.104 5.76 28.736 15.424 40.832 9.664 12.096 22.08 19.648 37.184 22.656 40.512 6.016 76.48 12.864 107.904 20.416 31.424 7.552 57.408 14.336 78.016 20.416l59.84 23.552c25.408 9.664 55.616 23.296 90.688 40.832 17.536 5.44 35.072 5.44 52.608 0 34.432-17.536 64.512-31.872 90.24-43.072 25.664-11.2 45.824-18.304 60.288-21.312 20.544-5.44 46.528-11.52 78.016-18.112l107.904-22.656c14.528-3.008 26.752-9.984 36.736-20.864 9.984-10.88 14.976-25.088 14.976-42.624V251.968c-0.704-18.112-6.72-33.216-18.24-45.312z m-364.48 472.768c0 15.872-14.464 28.928-32.128 28.928s-32.128-12.992-32.128-28.928V433.856c0-15.872 14.464-28.928 32.128-28.928s32.128 12.992 32.128 28.928v245.568z"</span> <span class="attr">p-id</span>=<span class="string">"14479"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>修改 src 目录下的 main.js 文件，全局引用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> IconSvg <span class="keyword">from</span> <span class="string">"./plugins/icons"</span>;</span><br><span class="line">Vue.use(IconSvg);</span><br></pre></td></tr></table></figure>

<p>使用方法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;icon-svg</span><br><span class="line"> svg-<span class="class"><span class="keyword">class</span></span>=<span class="string">"homework-svg-class"</span>    <span class="comment">// 可选，给对应的 svg 设 class 类名</span></span><br><span class="line"> svg-name=<span class="string">"homework"</span>    <span class="comment">// 必选，svg 对应的文件名称（@/plugins/icons/svg目录下）</span></span><br><span class="line">&gt;</span><br><span class="line">&lt;<span class="regexp">/icon-svg&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4、vue-i18n"><a href="#4、vue-i18n" class="headerlink" title="4、vue-i18n"></a>4、vue-i18n</h3><p>下载依赖包：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">yarn add vue-i18n</span><br></pre></td></tr></table></figure>

<p>在 src 目录下新建 locales 文件夹，对 i18n 进行统一封装：</p>
<p>@/locales/i18n.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> VueI18n <span class="keyword">from</span> <span class="string">"vue-i18n"</span>;</span><br><span class="line"><span class="keyword">import</span> enUS <span class="keyword">from</span> <span class="string">"./element/en-US"</span>;  <span class="comment">//也可直接引用 element-ui 插件中的多语言文件</span></span><br><span class="line"><span class="keyword">import</span> zhCN <span class="keyword">from</span> <span class="string">"./element/zh-CN"</span>;</span><br><span class="line"><span class="keyword">import</span> frFR <span class="keyword">from</span> <span class="string">"./element/fr-FR"</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(VueI18n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> LOCALE = <span class="string">"locale"</span>;                                     <span class="comment">//本地存储语言的key</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> SUPPORTED_LANGS = [<span class="string">"en-US"</span>, <span class="string">"zh-CN"</span>, <span class="string">"fr-FR"</span>];  <span class="comment">//支持的语言</span></span><br><span class="line"><span class="keyword">const</span> DEFAULT_LANG = SUPPORTED_LANGS[<span class="number">0</span>];                     <span class="comment">//默认语言</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> setLocale = <span class="function"><span class="params">lang</span> =&gt;</span> localStorage.setItem(LOCALE, lang);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getLocale = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> lang = localStorage.getItem(LOCALE);</span><br><span class="line">  <span class="keyword">return</span> lang &amp;&amp; SUPPORTED_LANGS.includes(lang) ? lang : DEFAULT_LANG;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ELEMENT_LANG = &#123;               <span class="comment">//项目支持的语言与引入的ui多语言文件建立关联</span></span><br><span class="line">  <span class="string">"en-US"</span>: enUS,</span><br><span class="line">  <span class="string">"zh-CN"</span>: zhCN,</span><br><span class="line">  <span class="string">"fr-FR"</span>: frFR</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadLocaleMessages</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> locales = <span class="built_in">require</span>.context(<span class="string">"./项目名"</span>, <span class="literal">true</span>, /[A-Za-z0<span class="number">-9</span>-_,\s]+\.json$/i);</span><br><span class="line">  <span class="keyword">const</span> messages = &#123;&#125;;</span><br><span class="line">  locales.keys().forEach(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> matched = key.match(<span class="regexp">/([A-Za-z0-9-_]+)\./i</span>);</span><br><span class="line">    <span class="keyword">if</span> (matched &amp;&amp; matched.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> locale = matched[<span class="number">1</span>];</span><br><span class="line">      messages[locale] = &#123;</span><br><span class="line">        ...locales(key),</span><br><span class="line">        ...ELEMENT_LANG[locale]      <span class="comment">//多语言信息中加入ui多语言</span></span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> messages;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> VueI18n(&#123;</span><br><span class="line">  locale: getLocale(),</span><br><span class="line">  fallbackLocale: DEFAULT_LANG,</span><br><span class="line">  messages: loadLocaleMessages()</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>



<p>@/locales/项目名/支持语言的 json 格式文件（en-US.json、zh-CN.json、fr-FR.json）：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="string">"key"</span>: <span class="string">"value"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 main.js 中引入 i18n：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./App.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> i18n <span class="keyword">from</span> <span class="string">"./locales/i18n"</span>;</span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">"element-ui"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"element-ui/lib/theme-chalk/index.css"</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI, &#123; <span class="attr">i18n</span>: <span class="function">(<span class="params">key, value</span>) =&gt;</span> i18n.t(key, value) &#125;); <span class="comment">//引入i18n</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  i18n,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure>

<p>在 vue 实例中使用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; info &#125;&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;&#123;&#123; $t("key.value") &#125;&#125;&lt;/</span>div&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      info: <span class="keyword">this</span>.$i18n.t(<span class="string">"key.value"</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 vue 实例外使用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> i18n <span class="keyword">from</span> <span class="string">"@/locales/i18n"</span>;</span><br><span class="line"></span><br><span class="line">i18n.t(<span class="string">"key.value"</span>)</span><br></pre></td></tr></table></figure>

<h3 id="5、axios"><a href="#5、axios" class="headerlink" title="5、axios"></a>5、axios</h3><p><a href="https://github.com/axios/axios" target="_blank" rel="noopener">github 传送门</a></p>
<p>下载依赖包：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yarn add axios</span><br></pre></td></tr></table></figure>



<p>新建 global 文件夹，目录结构如图：</p>
<p><img src="/2020/08/13/specification/global.png" alt></p>
<p>@/global/request/api.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  userInfo: <span class="string">"/api/xxxx"</span>,</span><br><span class="line"></span><br><span class="line">  coursesAll: <span class="string">"/api/courses/all"</span>,</span><br><span class="line">  courses: <span class="string">"/api/courses"</span>,</span><br><span class="line">  coursesItem: <span class="function"><span class="params">id</span> =&gt;</span> <span class="string">`/api/courses/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>@/global/request/axios.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"axios"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Message &#125; <span class="keyword">from</span> <span class="string">"element-ui"</span>;</span><br><span class="line"><span class="keyword">import</span> i18n <span class="keyword">from</span> <span class="string">"@/locales/i18n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> axiosInstance = axios.create();</span><br><span class="line"></span><br><span class="line">axiosInstance.defaults.timeout = <span class="number">20000</span>;</span><br><span class="line"></span><br><span class="line">axiosInstance.interceptors.request.use(</span><br><span class="line">  config =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> newConfig = &#123; ...config &#125;;</span><br><span class="line">    <span class="keyword">const</span> TOKEN = localStorage.getItem(<span class="string">"admin_token"</span>);</span><br><span class="line">    <span class="keyword">const</span> lang = localStorage.getItem(<span class="string">"locale"</span>);</span><br><span class="line">    <span class="comment">// const offset = -new Date().getTimezoneOffset() / 60;</span></span><br><span class="line">    <span class="comment">// const timezone = offset &lt; 0 ? "UTC" + offset : "UTC+" + offset;</span></span><br><span class="line">    <span class="keyword">if</span> (TOKEN) &#123;</span><br><span class="line">      newConfig.headers.Authorization = <span class="string">`Bearer <span class="subst">$&#123;TOKEN&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    newConfig.headers[<span class="string">"Accept-Language"</span>] = lang ? lang : <span class="string">"en-US"</span>;</span><br><span class="line">    <span class="comment">// newConfig.headers["Client-Timezone"] = timezone;</span></span><br><span class="line">    <span class="keyword">return</span> newConfig;</span><br><span class="line">  &#125;,</span><br><span class="line">  error =&gt; <span class="built_in">Promise</span>.reject(error)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handleErrorRequest = <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; response &#125; = error;</span><br><span class="line">  <span class="keyword">const</span> status = response ? response.status : <span class="number">408</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (response) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; data &#125; = response;</span><br><span class="line">    <span class="keyword">const</span> &#123; errors &#125; = data;</span><br><span class="line">    <span class="keyword">const</span> message = data.message || i18n.t(<span class="string">"api.serverError"</span>);</span><br><span class="line">    <span class="keyword">if</span> (status === <span class="number">401</span>) &#123;</span><br><span class="line">      localStorage.removeItem(<span class="string">"admin_token"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status === <span class="number">403</span>) &#123;</span><br><span class="line">      Message.error(i18n.t(<span class="string">"api.forbidden"</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status === <span class="number">419</span>) &#123;</span><br><span class="line">      <span class="comment">// 页面过期;</span></span><br><span class="line">      localStorage.clear();</span><br><span class="line">      sessionStorage.clear();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status === <span class="number">422</span> || status === <span class="number">423</span> || status === <span class="number">429</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> errorObj = errors ? errors : data;</span><br><span class="line">      <span class="built_in">Object</span>.keys(errorObj).forEach(<span class="function"><span class="params">errorKey</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> errorValue = errorObj[errorKey].join(<span class="string">"\n"</span>);</span><br><span class="line">        Message.error(errorValue);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Message.error(message);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Message.error(i18n.t(<span class="string">"api.timeout"</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">axiosInstance.interceptors.response.use(</span><br><span class="line">  res =&gt; &#123;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="keyword">case</span> res.status === <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">return</span> res.data;</span><br><span class="line">      <span class="keyword">case</span> res.data.code === <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">return</span> res.data.data;</span><br><span class="line">      <span class="keyword">case</span> res.data.error_code === <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> res.data.data;</span><br><span class="line">      <span class="comment">// case !!res.status:</span></span><br><span class="line">      <span class="comment">//   Message.error(&#123;</span></span><br><span class="line">      <span class="comment">//     dangerouslyUseHTMLString: true,</span></span><br><span class="line">      <span class="comment">//     message: `&lt;pre&gt;$&#123;res.data.message&#125;&lt;/pre&gt;`</span></span><br><span class="line">      <span class="comment">//   &#125;);</span></span><br><span class="line">      <span class="comment">//   return Promise.reject(res.data);</span></span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> res.data;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  error =&gt; &#123;</span><br><span class="line">    handleErrorRequest(error);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  post(url = <span class="string">""</span>, data = &#123;&#125;, config = &#123;&#125;) &#123;</span><br><span class="line">    <span class="keyword">return</span> axiosInstance.post(url, data, config);</span><br><span class="line">  &#125;,</span><br><span class="line">  put(url = <span class="string">""</span>, data = &#123;&#125;, config = &#123;&#125;) &#123;</span><br><span class="line">    <span class="keyword">return</span> axiosInstance.put(url, data, config);</span><br><span class="line">  &#125;,</span><br><span class="line">  patch(url = <span class="string">""</span>, data = &#123;&#125;, config = &#123;&#125;) &#123;</span><br><span class="line">    <span class="keyword">return</span> axiosInstance.patch(url, data, config);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">get</span>(url = "", params = &#123;&#125;, config = &#123;&#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> OPTIONS = <span class="built_in">Object</span>.assign(&#123; params &#125;, config);</span><br><span class="line">    <span class="keyword">return</span> axiosInstance.get(url, OPTIONS);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">delete</span>(url = <span class="string">""</span>, params = &#123;&#125;, config = &#123;&#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> OPTIONS = <span class="built_in">Object</span>.assign(&#123; params &#125;, config);</span><br><span class="line">    <span class="keyword">return</span> axiosInstance.delete(url, OPTIONS);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>@/global/service/user.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"@/global/request/axios"</span>;</span><br><span class="line"><span class="keyword">import</span> API <span class="keyword">from</span> <span class="string">"@/global/request/api"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userService = &#123;</span><br><span class="line">  info() &#123;</span><br><span class="line">    <span class="keyword">return</span> axios.get(API.userInfo);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> userService;</span><br></pre></td></tr></table></figure>



<h3 id="四、src-目录架构"><a href="#四、src-目录架构" class="headerlink" title="四、src 目录架构"></a>四、src 目录架构</h3><h3 id="1、main-js"><a href="#1、main-js" class="headerlink" title="1、main.js"></a>1、main.js</h3><p>只存放全局使用的组件，整体尽量简洁。</p>
<h3 id="2、App-vue"><a href="#2、App-vue" class="headerlink" title="2、App.vue"></a>2、App.vue</h3><p>渲染父路由，存放全局样式，样式分类抽离进 assets 目录下的 styles 目录中：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;<span class="regexp">/router-view&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=<span class="string">"less"</span>&gt;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">"./assets/styles/base.less"</span>;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">"./assets/styles/el.less"</span>;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="3、assets"><a href="#3、assets" class="headerlink" title="3、assets"></a>3、assets</h3><p>存放静态文件，一般为样式和图片，所以分别新建两个目录：images 和 styles：</p>
<p><img src="/2020/08/13/specification/assets.png" alt></p>
<p>base.less 与 el.less 具体参考如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// base.less</span></span><br><span class="line">* &#123;</span><br><span class="line">  padding: <span class="number">0</span>;</span><br><span class="line">  margin: <span class="number">0</span>;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  font-family: <span class="string">"Helvetica Neue"</span>, Helvetica, <span class="string">"PingFang SC"</span>, <span class="string">"Hiragino Sans GB"</span>,</span><br><span class="line">    <span class="string">"Microsoft YaHei"</span>, <span class="string">"微软雅黑"</span>, Arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html, body &#123;</span><br><span class="line">  height: <span class="number">100</span>%;</span><br><span class="line">  background-color: #fafafa;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.page-content-container &#123;</span><br><span class="line">  padding: <span class="number">12</span>px <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.mb<span class="number">-24</span> &#123;</span><br><span class="line">  margin-bottom: <span class="number">24</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.mb<span class="number">-20</span> &#123;</span><br><span class="line">  margin-bottom: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.mb<span class="number">-12</span> &#123;</span><br><span class="line">  margin-bottom: <span class="number">12</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.mb<span class="number">-8</span> &#123;</span><br><span class="line">  margin-bottom: <span class="number">8</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.mr<span class="number">-12</span> &#123;</span><br><span class="line">  margin-right: <span class="number">12</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.w<span class="number">-90</span>pc &#123;</span><br><span class="line">  width: <span class="number">90</span>% !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-95</span>pc &#123;</span><br><span class="line">  width: <span class="number">95</span>% !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-600</span> &#123;</span><br><span class="line">  width: <span class="number">600</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-260</span> &#123;</span><br><span class="line">  width: <span class="number">260</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-200</span> &#123;</span><br><span class="line">  width: <span class="number">200</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-180</span> &#123;</span><br><span class="line">  width: <span class="number">180</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-170</span> &#123;</span><br><span class="line">  width: <span class="number">170</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-135</span> &#123;</span><br><span class="line">  width: <span class="number">135</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-120</span> &#123;</span><br><span class="line">  width: <span class="number">120</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-100</span> &#123;</span><br><span class="line">  width: <span class="number">100</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line">.w<span class="number">-90</span> &#123;</span><br><span class="line">  width: <span class="number">90</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.brand-color &#123;</span><br><span class="line">  color: #409EFF;</span><br><span class="line">&#125;</span><br><span class="line">.success-color &#123;</span><br><span class="line">  color: #13ce66;</span><br><span class="line">&#125;</span><br><span class="line">.warning-color &#123;</span><br><span class="line">  color: #E6A23C;</span><br><span class="line">&#125;</span><br><span class="line">.danger-color &#123;</span><br><span class="line">  color: #F56C6C;</span><br><span class="line">&#125;</span><br><span class="line">.info-color &#123;</span><br><span class="line">  color: #909399;</span><br><span class="line">&#125;</span><br><span class="line">.normal-info-color &#123;</span><br><span class="line">  color: #606266;</span><br><span class="line">&#125;</span><br><span class="line">.deep-info-color &#123;</span><br><span class="line">  color: #303133;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// el.less</span></span><br><span class="line"><span class="comment">// el文字链接 字重</span></span><br><span class="line">.el-link--inner &#123;</span><br><span class="line">  font-size: <span class="number">12</span>px;</span><br><span class="line">  font-weight: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// el表格</span></span><br><span class="line">.el-table &#123;</span><br><span class="line">  tr th,</span><br><span class="line">  tr td &#123;</span><br><span class="line">    padding: <span class="number">4</span>px;</span><br><span class="line">    font-size: <span class="number">12</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// el分页 外边距</span></span><br><span class="line">.el-pagination &#123;</span><br><span class="line">  margin-top: <span class="number">12</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// el卡片 header内容位置、body内容位置</span></span><br><span class="line">.el-card &#123;</span><br><span class="line">  .el-card__header &#123;</span><br><span class="line">    padding: <span class="number">16</span>px <span class="number">20</span>px <span class="number">8</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-card .el-card__body &#123;</span><br><span class="line">    padding: <span class="number">8</span>px <span class="number">20</span>px <span class="number">16</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// el多行文本 字数统计调整</span></span><br><span class="line">.el-textarea .el-input__count &#123;</span><br><span class="line">  bottom: <span class="number">-8</span>px !important;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// el日期选择器 选择范围时的分隔符宽度调整</span></span><br><span class="line">.el-range-separator &#123;</span><br><span class="line">  width: <span class="number">10</span>% !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// el多选框 禁用状态 已选颜色加深</span></span><br><span class="line">.el-checkbox.is-disabled.is-checked &#123;</span><br><span class="line">  .el-checkbox__label &#123;</span><br><span class="line">    color: #606266;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-checkbox__input.is-disabled.is-checked &#123;</span><br><span class="line">    .el-checkbox__inner &#123;</span><br><span class="line">      border-color: #606266;</span><br><span class="line">      &amp;::after &#123;</span><br><span class="line">        border-color: #606266;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// el输入框、选择器</span></span><br><span class="line">.el-input__inner:hover,</span><br><span class="line">.el-textarea__inner:hover,</span><br><span class="line">.el-select:hover .el-input__inner &#123;</span><br><span class="line">  border-color: #409EFF;</span><br><span class="line">&#125;</span><br><span class="line">.el-input.is-disabled .el-input__inner,</span><br><span class="line">.el-textarea.is-disabled .el-textarea__inner &#123;</span><br><span class="line">  color: #606266 !important;</span><br><span class="line">  border: none !important;</span><br><span class="line">  cursor: <span class="keyword">default</span> !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// el-upload 禁用状态 鼠标光标</span></span><br><span class="line">.upload-container.disabled &#123;</span><br><span class="line">  .el-upload &#123;</span><br><span class="line">    cursor: <span class="keyword">default</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  img &#123;</span><br><span class="line">    cursor: <span class="keyword">default</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// el菜单导航</span></span><br><span class="line">.el-menu &#123;</span><br><span class="line">  border-right: <span class="number">0</span> !important;</span><br><span class="line">  .el-submenu,</span><br><span class="line">  .el-menu-item &#123;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">    text-overflow: ellipsis;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item,</span><br><span class="line">.el-submenu__title &#123;</span><br><span class="line">  height: <span class="number">48</span>px !important;</span><br><span class="line">  line-height: <span class="number">48</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-submenu-level_2 .el-submenu__title &#123;</span><br><span class="line">  padding: <span class="number">0</span> <span class="number">20</span>px !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-menu-item &#123;</span><br><span class="line">  padding: <span class="number">0</span> <span class="number">20</span>px !important;</span><br><span class="line">  .fa-dot &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    margin-right: <span class="number">6</span>px;</span><br><span class="line">    width: <span class="number">24</span>px;</span><br><span class="line">    font-size: <span class="number">30</span>px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    vertical-align: top;</span><br><span class="line">    color: #909399;</span><br><span class="line">    &amp;:before &#123;</span><br><span class="line">      content: <span class="string">"\00b7"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;:hover .fa-dot &#123;</span><br><span class="line">    color: #EEE;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.el-menu-item.is-active .fa-dot &#123;</span><br><span class="line">  color: #409EFF;</span><br><span class="line">&#125;</span><br><span class="line">.el-submenu-level_1.is-active &gt; .el-submenu__title &#123;</span><br><span class="line">  i &#123;</span><br><span class="line">    color: #409EFF !important;</span><br><span class="line">  &#125;</span><br><span class="line">  svg &#123;</span><br><span class="line">    color: #409EFF !important;</span><br><span class="line">  &#125;</span><br><span class="line">  span &#123;</span><br><span class="line">    color: #409EFF !important;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.fa-diamond &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  margin-right: <span class="number">6</span>px;</span><br><span class="line">  width: <span class="number">24</span>px;</span><br><span class="line">  font-size: <span class="number">16</span>px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  vertical-align: top;</span><br><span class="line">  color: #909399;</span><br><span class="line">  transform-origin: center <span class="number">53</span>%;</span><br><span class="line">  transform: rotateZ(<span class="number">135</span>deg);</span><br><span class="line">  transition: all <span class="number">0.4</span>s linear;</span><br><span class="line">  &amp;:before &#123;</span><br><span class="line">    content: <span class="string">"\2724"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.el-submenu-level_2:hover .fa-diamond &#123;</span><br><span class="line">  color: #EEE;</span><br><span class="line">  transform: rotate(<span class="number">0</span>deg);</span><br><span class="line">&#125;</span><br><span class="line">.el-submenu-level_2.is-active .el-submenu__title &#123;</span><br><span class="line">  span &#123;</span><br><span class="line">    color: #409EFF !important;</span><br><span class="line">  &#125;</span><br><span class="line">  .fa-diamond &#123;</span><br><span class="line">    transform: rotate(<span class="number">0</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4、components"><a href="#4、components" class="headerlink" title="4、components"></a>4、components</h3><p>存放所有的组件（可复用组件、特殊封装组件）</p>
<p>TheLayout.vue 组件参考：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-left-container"</span> :style=<span class="string">"&#123; width: siderWidth &#125;"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-sidebar"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"sidebar-header"</span>&gt;</span><br><span class="line">          &lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">"sidebar-header-logo"</span> src=<span class="string">"@/assets/images/logo.png"</span> /&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div</span></span><br><span class="line"><span class="regexp">          class="sidebar-body"</span></span><br><span class="line"><span class="regexp">          :style="&#123; backgroundColor: navBackgroundColor &#125;"</span></span><br><span class="line"><span class="regexp">        &gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-scrollbar class="scrollbar-section"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;el-menu</span></span><br><span class="line"><span class="regexp">              :background-color="navBackgroundColor"</span></span><br><span class="line"><span class="regexp">              :text-color="navTextColor"</span></span><br><span class="line"><span class="regexp">              :active-text-color="navActiveTextColor"</span></span><br><span class="line"><span class="regexp">              :default-active="navDefaultActive"</span></span><br><span class="line"><span class="regexp">              :router="true"</span></span><br><span class="line"><span class="regexp">              :collapse="collapse"</span></span><br><span class="line"><span class="regexp">            &gt;</span></span><br><span class="line"><span class="regexp">              &lt;template v-for="route in navRoutes"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-menu-item</span></span><br><span class="line"><span class="regexp">                  v-if="!haveChildren(route)"</span></span><br><span class="line"><span class="regexp">                  :key="route.name"</span></span><br><span class="line"><span class="regexp">                  :index="route.name"</span></span><br><span class="line"><span class="regexp">                  :route="&#123; name: route.name &#125;"</span></span><br><span class="line"><span class="regexp">                &gt;</span></span><br><span class="line"><span class="regexp">                  &lt;i</span></span><br><span class="line"><span class="regexp">                    v-if="route.meta.nav.icon"</span></span><br><span class="line"><span class="regexp">                    :class="route.meta.nav.icon"</span></span><br><span class="line"><span class="regexp">                  &gt;&lt;/i</span>&gt;</span><br><span class="line">                  &lt;icon-svg</span><br><span class="line">                    v-<span class="keyword">if</span>=<span class="string">"route.meta.nav.svg"</span></span><br><span class="line">                    :svg-<span class="class"><span class="keyword">class</span></span>=<span class="string">"route.meta.nav.svg.class"</span></span><br><span class="line">                    :svg-name=<span class="string">"route.meta.nav.svg.name"</span></span><br><span class="line">                  &gt;&lt;<span class="regexp">/icon-svg&gt;</span></span><br><span class="line"><span class="regexp">                  &lt;span slot="title"&gt;&#123;&#123; route.meta.nav.title &#125;&#125;&lt;/</span>span&gt;</span><br><span class="line">                &lt;<span class="regexp">/el-menu-item&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-submenu</span></span><br><span class="line"><span class="regexp">                  class="el-submenu-level_1"</span></span><br><span class="line"><span class="regexp">                  v-else</span></span><br><span class="line"><span class="regexp">                  :key="route.name"</span></span><br><span class="line"><span class="regexp">                  :index="route.name"</span></span><br><span class="line"><span class="regexp">                &gt;</span></span><br><span class="line"><span class="regexp">                  &lt;template slot="title"&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;i</span></span><br><span class="line"><span class="regexp">                      v-if="route.meta.nav.icon"</span></span><br><span class="line"><span class="regexp">                      :class="route.meta.nav.icon"</span></span><br><span class="line"><span class="regexp">                    &gt;&lt;/i</span>&gt;</span><br><span class="line">                    &lt;icon-svg</span><br><span class="line">                      v-<span class="keyword">if</span>=<span class="string">"route.meta.nav.svg"</span></span><br><span class="line">                      :svg-<span class="class"><span class="keyword">class</span></span>=<span class="string">"route.meta.nav.svg.class"</span></span><br><span class="line">                      :svg-name=<span class="string">"route.meta.nav.svg.name"</span></span><br><span class="line">                    &gt;&lt;<span class="regexp">/icon-svg&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;span&gt;&#123;&#123; route.meta.nav.title &#125;&#125;&lt;/</span>span&gt;</span><br><span class="line">                  &lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                  &lt;template v-for="item in route.children"&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;el-menu-item</span></span><br><span class="line"><span class="regexp">                      v-if="!haveChildren(item)"</span></span><br><span class="line"><span class="regexp">                      :key="item.name"</span></span><br><span class="line"><span class="regexp">                      :index="item.name"</span></span><br><span class="line"><span class="regexp">                      :route="&#123; name: item.name &#125;"</span></span><br><span class="line"><span class="regexp">                    &gt;</span></span><br><span class="line"><span class="regexp">                      &lt;span class="fa-dot"&gt;&lt;/</span>span&gt;</span><br><span class="line">                      &lt;span&gt;&#123;&#123; item.meta.nav.title &#125;&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;/</span>el-menu-item&gt;</span><br><span class="line">                    &lt;el-submenu</span><br><span class="line">                      <span class="class"><span class="keyword">class</span></span>=<span class="string">"el-submenu-level_2"</span></span><br><span class="line">                      v-<span class="keyword">else</span></span><br><span class="line">                      :key=<span class="string">"item.name"</span></span><br><span class="line">                      :index=<span class="string">"item.name"</span></span><br><span class="line">                    &gt;</span><br><span class="line">                      &lt;template slot=<span class="string">"title"</span>&gt;</span><br><span class="line">                        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa-diamond"</span>&gt;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;span&gt;&#123;&#123; item.meta.nav.title &#125;&#125;&lt;/</span>span&gt;</span><br><span class="line">                      &lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">                      &lt;el-menu-item</span></span><br><span class="line"><span class="regexp">                        v-for="data in item.children"</span></span><br><span class="line"><span class="regexp">                        :key="data.name"</span></span><br><span class="line"><span class="regexp">                        :index="data.name"</span></span><br><span class="line"><span class="regexp">                        :route="&#123; name: data.name &#125;"</span></span><br><span class="line"><span class="regexp">                      &gt;</span></span><br><span class="line"><span class="regexp">                        &lt;span class="fa-dot"&gt;&lt;/</span>span&gt;</span><br><span class="line">                        &lt;span&gt;&#123;&#123; data.meta.nav.title &#125;&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">                      &lt;/</span>el-menu-item&gt;</span><br><span class="line">                    &lt;<span class="regexp">/el-submenu&gt;</span></span><br><span class="line"><span class="regexp">                  &lt;/</span>template&gt;</span><br><span class="line">                &lt;<span class="regexp">/el-submenu&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>template&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-menu&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>el-scrollbar&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="sidebar-footer"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;div class="collapse-icon-container" @click="handleCollapse"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;img</span></span><br><span class="line"><span class="regexp">              class="collapse-icon"</span></span><br><span class="line"><span class="regexp">              :class="&#123; unfold: collapse &#125;"</span></span><br><span class="line"><span class="regexp">              src="@/</span>assets/images/fold.svg<span class="string">"</span></span><br><span class="line"><span class="string">            /&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="</span>page-right-container<span class="string">"&gt;</span></span><br><span class="line"><span class="string">      &lt;div class="</span>page-header<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;div class="</span>page-header-left<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class="</span>page-header-middle<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;el-dropdown style="</span>height: <span class="number">100</span>%<span class="string">" @command="</span>handleCommand<span class="string">"&gt;</span></span><br><span class="line"><span class="string">          &lt;div class="</span>page-header-right<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &lt;img v-if="</span>userAvatar<span class="string">" class="</span>user-avatar<span class="string">" :src="</span>userAvatar<span class="string">" /&gt;</span></span><br><span class="line"><span class="string">            &lt;img</span></span><br><span class="line"><span class="string">              v-else</span></span><br><span class="line"><span class="string">              class="</span>user-avatar<span class="string">"</span></span><br><span class="line"><span class="string">              src="</span>@/assets/images/<span class="keyword">default</span>-avatar.png<span class="string">"</span></span><br><span class="line"><span class="string">            /&gt;</span></span><br><span class="line"><span class="string">            &lt;span class="</span>user-name<span class="string">"&gt;&#123;&#123; userName &#125;&#125;&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;i class="</span>el-icon-arrow-down<span class="string">"&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;el-dropdown-menu slot="</span>dropdown<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &lt;el-dropdown-item icon="</span>el-icon-video-pause<span class="string">" command="</span>handleLogout<span class="string">"</span></span><br><span class="line"><span class="string">              &gt;登出&lt;/el-dropdown-item</span></span><br><span class="line"><span class="string">            &gt;</span></span><br><span class="line"><span class="string">          &lt;/el-dropdown-menu&gt;</span></span><br><span class="line"><span class="string">        &lt;/el-dropdown&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div class="</span>page-content<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;el-scrollbar class="</span>scrollbar-section<span class="string">"&gt;</span></span><br><span class="line"><span class="string">          &lt;router-view /&gt;</span></span><br><span class="line"><span class="string">        &lt;/el-scrollbar&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/template&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">import &#123; mapState &#125; from "</span>vuex<span class="string">";</span></span><br><span class="line"><span class="string">import routesAll from "</span>@/router/routes<span class="string">";</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  data() &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line">      navBackgroundColor: "#141f29",</span><br><span class="line">      navTextColor: <span class="string">"#EEE"</span>,</span><br><span class="line">      navActiveTextColor: <span class="string">""</span>,</span><br><span class="line">      navDefaultActive: <span class="keyword">this</span>.$route.name,</span><br><span class="line">      navRoutes: [],</span><br><span class="line">      collapse: <span class="literal">false</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapState([<span class="string">"userAvatar"</span>, <span class="string">"userName"</span>, <span class="string">"authPermissions"</span>]),</span><br><span class="line">    siderWidth() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.collapse ? <span class="string">"64px"</span> : <span class="string">"227px"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="keyword">this</span>.getRoutes();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getRoutes() &#123;</span><br><span class="line">      <span class="keyword">let</span> resultRoutes = <span class="keyword">this</span>.filterPermissionRoutes(</span><br><span class="line">        routesAll,</span><br><span class="line">        <span class="keyword">this</span>.authPermissions</span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">this</span>.navRoutes = <span class="keyword">this</span>.filterRoutes(resultRoutes);</span><br><span class="line">    &#125;,</span><br><span class="line">    filterPermissionRoutes(routes, permissions) &#123;</span><br><span class="line">      <span class="keyword">const</span> filterRoutes = [];</span><br><span class="line">      routes.forEach(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> route = &#123; ...data &#125;;</span><br><span class="line">        <span class="keyword">const</span> notPermission = !route.permission;</span><br><span class="line">        <span class="keyword">const</span> hasPermission = permissions.includes(route.permission);</span><br><span class="line">        <span class="keyword">const</span> passPermission = notPermission || hasPermission;</span><br><span class="line">        <span class="keyword">let</span> hasPath = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (route.children) &#123;</span><br><span class="line">          route.children = <span class="keyword">this</span>.filterPermissionRoutes(</span><br><span class="line">            data.children,</span><br><span class="line">            permissions</span><br><span class="line">          );</span><br><span class="line">          <span class="keyword">if</span> (route.children.length === <span class="number">0</span>) &#123;</span><br><span class="line">            hasPath = <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (passPermission &amp;&amp; hasPath) &#123;</span><br><span class="line">          filterRoutes.push(route);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> filterRoutes;</span><br><span class="line">    &#125;,</span><br><span class="line">    filterRoutes(routes) &#123;</span><br><span class="line">      <span class="keyword">let</span> result = [];</span><br><span class="line">      routes.forEach(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (data.meta &amp;&amp; data.meta.nav) &#123;</span><br><span class="line">          <span class="keyword">let</span> item = &#123;</span><br><span class="line">            name: data.name,</span><br><span class="line">            meta: data.meta</span><br><span class="line">          &#125;;</span><br><span class="line">          <span class="keyword">if</span> (data.children) &#123;</span><br><span class="line">            item.children = <span class="keyword">this</span>.filterRoutes(data.children);</span><br><span class="line">          &#125;</span><br><span class="line">          result.push(item);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.children) &#123;</span><br><span class="line">          <span class="keyword">this</span>.filterRoutes(data.children).forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            result.push(item);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    &#125;,</span><br><span class="line">    haveChildren(route) &#123;</span><br><span class="line">      <span class="keyword">let</span> children = route.children || [];</span><br><span class="line">      <span class="keyword">return</span> children.length;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleCollapse() &#123;</span><br><span class="line">      <span class="keyword">this</span>.collapse = !<span class="keyword">this</span>.collapse;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleCommand(command) &#123;</span><br><span class="line">      <span class="keyword">this</span>[command]();</span><br><span class="line">    &#125;,</span><br><span class="line">    handleLogout() &#123;</span><br><span class="line">      <span class="keyword">this</span>.$store.dispatch(<span class="string">"logout"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style lang="less"&gt;</span></span><br><span class="line"><span class="regexp">.page &#123;</span></span><br><span class="line"><span class="regexp">  .scrollbar-section &#123;</span></span><br><span class="line"><span class="regexp">    height: 100%;</span></span><br><span class="line"><span class="regexp">    .el-scrollbar__wrap &#123;</span></span><br><span class="line"><span class="regexp">      overflow-x: auto;</span></span><br><span class="line"><span class="regexp">      min-height: 100%;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    .el-scrollbar__view &#123;</span></span><br><span class="line"><span class="regexp">      min-height: 100%;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br><span class="line">&lt;style lang=<span class="string">"less"</span> scoped&gt;</span><br><span class="line">.nav-svg &#123;</span><br><span class="line">  margin-right: <span class="number">5</span>px;</span><br><span class="line">  width: <span class="number">24</span>px;</span><br><span class="line">  height: <span class="number">18</span>px;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">  color: #909399;</span><br><span class="line">&#125;</span><br><span class="line">.page &#123;</span><br><span class="line">  height: <span class="number">100</span>vh;</span><br><span class="line">  display: flex;</span><br><span class="line">  .page-left-container &#123;</span><br><span class="line">    z-index: <span class="number">101</span>;</span><br><span class="line">    flex: none;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    width: <span class="number">246</span>px;</span><br><span class="line">    transition: all <span class="number">0.2</span>s ease-out;</span><br><span class="line">    .page-sidebar &#123;</span><br><span class="line">      flex: <span class="number">1</span>;</span><br><span class="line">      display: flex;</span><br><span class="line">      flex-direction: column;</span><br><span class="line">      .sidebar-header &#123;</span><br><span class="line">        z-index: <span class="number">102</span>;</span><br><span class="line">        flex: none;</span><br><span class="line">        height: <span class="number">48</span>px;</span><br><span class="line">        background: #fff;</span><br><span class="line">        .sidebar-header-logo &#123;</span><br><span class="line">          margin: <span class="number">8</span>px <span class="number">12</span>px <span class="number">8</span>px <span class="number">20</span>px;</span><br><span class="line">          height: <span class="number">32</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      .sidebar-body &#123;</span><br><span class="line">        flex: <span class="number">1</span>;</span><br><span class="line">        height: <span class="number">0</span>;</span><br><span class="line">        overflow: auto;</span><br><span class="line">        box-shadow: <span class="number">2</span>px <span class="number">2</span>px <span class="number">6</span>px rgba(<span class="number">0</span>, <span class="number">21</span>, <span class="number">41</span>, <span class="number">0.35</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      .sidebar-footer &#123;</span><br><span class="line">        flex: none;</span><br><span class="line">        padding: <span class="number">8</span>px;</span><br><span class="line">        height: <span class="number">48</span>px;</span><br><span class="line">        background: #141f29;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">        box-shadow: <span class="number">2</span>px <span class="number">0</span> <span class="number">6</span>px rgba(<span class="number">0</span>, <span class="number">21</span>, <span class="number">41</span>, <span class="number">0.35</span>);</span><br><span class="line">        .collapse-icon-container &#123;</span><br><span class="line">          height: <span class="number">32</span>px;</span><br><span class="line">          text-align: center;</span><br><span class="line">          background-color: #1d2b3a;</span><br><span class="line">          border-radius: <span class="number">3</span>px;</span><br><span class="line">          cursor: pointer;</span><br><span class="line">          &amp;:hover &#123;</span><br><span class="line">            background-color: #273849;</span><br><span class="line">          &#125;</span><br><span class="line">          .collapse-icon &#123;</span><br><span class="line">            margin-top: <span class="number">6</span>px;</span><br><span class="line">            width: <span class="number">20</span>px;</span><br><span class="line">            height: <span class="number">20</span>px;</span><br><span class="line">            transition: all <span class="number">0.2</span>s ease-out;</span><br><span class="line">            &amp;.unfold &#123;</span><br><span class="line">              transform: rotate(<span class="number">-180</span>deg);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .page-right-container &#123;</span><br><span class="line">    flex: <span class="number">1</span>;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    min-width: <span class="number">1000</span>px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    .page-header &#123;</span><br><span class="line">      z-index: <span class="number">100</span>;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: space-between;</span><br><span class="line">      padding: <span class="number">0</span> <span class="number">20</span>px;</span><br><span class="line">      height: <span class="number">48</span>px;</span><br><span class="line">      font-size: <span class="number">12</span>px;</span><br><span class="line">      line-height: <span class="number">48</span>px;</span><br><span class="line">      font-weight: <span class="number">400</span>;</span><br><span class="line">      color: #606266;</span><br><span class="line">      background: #fff;</span><br><span class="line">      box-shadow: <span class="number">0</span> <span class="number">1</span>px <span class="number">2</span>px <span class="number">0</span> rgba(<span class="number">9</span>, <span class="number">18</span>, <span class="number">26</span>, <span class="number">0.06</span>),</span><br><span class="line">        <span class="number">0</span> <span class="number">4</span>px <span class="number">8</span>px <span class="number">0</span> rgba(<span class="number">39</span>, <span class="number">56</span>, <span class="number">73</span>, <span class="number">0.08</span>);</span><br><span class="line">      .page-header-right &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line">        padding: <span class="number">0</span> <span class="number">10</span>px;</span><br><span class="line">        height: <span class="number">100</span>%;</span><br><span class="line">        transition: all <span class="number">0.2</span>s ease;</span><br><span class="line">        cursor: pointer;</span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">          background: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.025</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        .user-avatar &#123;</span><br><span class="line">          margin: <span class="number">0</span> <span class="number">8</span>px;</span><br><span class="line">          width: <span class="number">30</span>px;</span><br><span class="line">          height: <span class="number">30</span>px;</span><br><span class="line">          object-fit: cover;</span><br><span class="line">          border-radius: <span class="number">50</span>%;</span><br><span class="line">        &#125;</span><br><span class="line">        .user-name &#123;</span><br><span class="line">          margin-right: <span class="number">8</span>px;</span><br><span class="line">          font-size: <span class="number">12</span>px;</span><br><span class="line">          vertical-align: middle;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .page-content &#123;</span><br><span class="line">      position: relative;</span><br><span class="line">      flex: <span class="number">1</span>;</span><br><span class="line">      overflow-y: auto;</span><br><span class="line">      background: #f0f2f5;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure>

<p>面包屑 BreadCrumb.vue 组件参考：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"breadcrumb-section"</span>&gt;</span><br><span class="line">    &lt;el-breadcrumb</span><br><span class="line">      <span class="class"><span class="keyword">class</span></span>=<span class="string">"breadcrumb-list"</span></span><br><span class="line">      v-<span class="keyword">if</span>=<span class="string">"breadcrumbValue.length"</span></span><br><span class="line">      separator-<span class="class"><span class="keyword">class</span></span>=<span class="string">"el-icon-arrow-right"</span></span><br><span class="line">    &gt;</span><br><span class="line">      &lt;template v-<span class="keyword">for</span>=<span class="string">"(item, index) in breadcrumbValue"</span>&gt;</span><br><span class="line">        &lt;el-breadcrumb-item</span><br><span class="line">          v-<span class="keyword">if</span>=<span class="string">"item.to"</span></span><br><span class="line">          :to=<span class="string">"item.to"</span></span><br><span class="line">          :key=<span class="string">"index"</span></span><br><span class="line">          :replace=<span class="string">"true"</span></span><br><span class="line">          &gt;&#123;&#123; item.name &#125;&#125;&lt;<span class="regexp">/el-breadcrumb-item</span></span><br><span class="line"><span class="regexp">        &gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-breadcrumb-item v-else :key="item.name"&gt;&#123;&#123;</span></span><br><span class="line"><span class="regexp">          item.name</span></span><br><span class="line"><span class="regexp">        &#125;&#125;&lt;/</span>el-breadcrumb-item&gt;</span><br><span class="line">      &lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-breadcrumb&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    breadcrumb: &#123;</span><br><span class="line">      type: <span class="built_in">Array</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    breadcrumbValue() &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; breadcrumb &#125; = <span class="keyword">this</span>;</span><br><span class="line">      <span class="keyword">if</span> (breadcrumb.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> breadcrumb;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$route.matched</span><br><span class="line">        .filter(<span class="function"><span class="params">data</span> =&gt;</span> data.meta &amp;&amp; data.meta.breadcrumb)</span><br><span class="line">        .map(<span class="function"><span class="params">data</span> =&gt;</span> (&#123;</span><br><span class="line">          name: data.meta.breadcrumb.title,</span><br><span class="line">          to: data.meta.breadcrumb.replace ? &#123; <span class="attr">name</span>: data.name &#125; : <span class="literal">undefined</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style lang="less" scoped&gt;</span></span><br><span class="line"><span class="regexp">.el-breadcrumb &#123;</span></span><br><span class="line"><span class="regexp">  margin-left: 4px;</span></span><br><span class="line"><span class="regexp">  margin-bottom: 12px;</span></span><br><span class="line"><span class="regexp">  font-size: 12px;</span></span><br><span class="line"><span class="regexp">  line-height: 16px;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="5、plugins"><a href="#5、plugins" class="headerlink" title="5、plugins"></a>5、plugins</h3><p>存放所有与 devDependencies 相关的插件</p>
<h3 id="6、router"><a href="#6、router" class="headerlink" title="6、router"></a>6、router</h3><p>路由分离，路由运行与路由结构分离成 index.js 与 routes.js，路由结构可根据菜单模块进一步分离，分离后的文件名均加上 routes 前缀：</p>
<p><img src="/2020/08/13/specification/router.png" alt></p>
<p>index.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">"vue-router"</span>;</span><br><span class="line"><span class="keyword">import</span> routes <span class="keyword">from</span> <span class="string">"./routes"</span>;</span><br><span class="line"><span class="keyword">import</span> NProgress <span class="keyword">from</span> <span class="string">"nprogress"</span>;                  <span class="comment">// 引入 NProgress</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"nprogress/nprogress.css"</span>;                   <span class="comment">// 引用 NProgress 样式</span></span><br><span class="line"><span class="keyword">import</span> userService <span class="keyword">from</span> <span class="string">"@/global/service/user"</span>;    <span class="comment">// 引入封装好的 user 请求</span></span><br><span class="line"><span class="keyword">import</span> Store <span class="keyword">from</span> <span class="string">"@/store/index"</span>;                  <span class="comment">// 引入 全局 store</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">"history"</span>,                                  <span class="comment">// 使用路由的 history 模式</span></span><br><span class="line">  routes                                            <span class="comment">// 路由的结构分离到 routes 文件</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.firstInit = <span class="literal">false</span>;                           <span class="comment">// 用于判断是否第一次渲染</span></span><br><span class="line"></span><br><span class="line">router.beforeEach(<span class="keyword">async</span> (to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  NProgress.start();                                    <span class="comment">// NProgress 的使用</span></span><br><span class="line">  <span class="keyword">if</span> (to.meta.title) <span class="built_in">document</span>.title = to.meta.title;    <span class="comment">// 页面标题</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> TOKEN = localStorage.getItem(<span class="string">"admin_token"</span>);</span><br><span class="line">    <span class="keyword">if</span> (!TOKEN &amp;&amp; to.name !== <span class="string">"AccountLogin"</span>) &#123;</span><br><span class="line">      next(&#123; <span class="attr">name</span>: <span class="string">"AccountLogin"</span>, <span class="attr">replace</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (TOKEN &amp;&amp; to.name === <span class="string">"AccountLogin"</span>) &#123;</span><br><span class="line">      next(&#123; <span class="attr">name</span>: <span class="string">"Home"</span>, <span class="attr">replace</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!router.firstInit &amp;&amp; TOKEN) &#123;</span><br><span class="line">      router.firstInit = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">const</span> userInfo = <span class="keyword">await</span> userService.info();        <span class="comment">// 初次渲染时将用户基本信息</span></span><br><span class="line">      Store.commit(<span class="string">"getUserAvatar"</span>, userInfo.avatar);   <span class="comment">// 和所拥有的权限存入 store</span></span><br><span class="line">      Store.commit(<span class="string">"getUserName"</span>, userInfo.name);</span><br><span class="line">      Store.commit(<span class="string">"getAuthPermissions"</span>, userInfo.permissions);</span><br><span class="line">    &#125;</span><br><span class="line">    next();</span><br><span class="line">  &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">    next();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.afterEach(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  NProgress.done();                                     <span class="comment">// NProgress 的使用</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure>

<p>routes：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> routesHome <span class="keyword">from</span> <span class="string">"./routesHome"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> TheLayout <span class="keyword">from</span> <span class="string">"@/components/TheLayout.vue"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/admin"</span>,</span><br><span class="line">    component: TheLayout,</span><br><span class="line">    redirect: &#123; <span class="attr">name</span>: <span class="string">"Home"</span> &#125;,</span><br><span class="line">    children: [...routesHome]</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure>



<h3 id="7、store"><a href="#7、store" class="headerlink" title="7、store"></a>7、store</h3><p>存放全局信息、方法（一般为用户基本信息与用户权限）</p>
<h3 id="8、views"><a href="#8、views" class="headerlink" title="8、views"></a>8、views</h3><p>存放所有页面，注意命名规范，可参考 <a href="https://cn.vuejs.org/v2/style-guide" target="_blank" rel="noopener">vue 风格指南</a></p>
<p><img src="/2020/08/13/specification/views.png" alt></p>
<p>页面 script 中 export default 选项顺序：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;&#125;,</span><br><span class="line">  props: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  created() &#123;&#125;,</span><br><span class="line">  mounted() &#123;&#125;,</span><br><span class="line">  watch: &#123;&#125;,</span><br><span class="line">  methods: &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="9、utils"><a href="#9、utils" class="headerlink" title="9、utils"></a>9、utils</h3><p>存放一些小工具小功能小方法，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> formatTime = <span class="function"><span class="params">timestamp</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(timestamp);</span><br><span class="line">  <span class="keyword">const</span> year = date.getFullYear();</span><br><span class="line">  <span class="keyword">const</span> month = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">const</span> day = date.getDate();</span><br><span class="line">  <span class="keyword">const</span> hour = date.getHours();</span><br><span class="line">  <span class="keyword">const</span> minute = date.getMinutes();</span><br><span class="line">  <span class="keyword">const</span> second = date.getSeconds();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    [year, month, day].map(formatNumber).join(<span class="string">"/"</span>) +</span><br><span class="line">    <span class="string">" "</span> +</span><br><span class="line">    [hour, minute, second].map(formatNumber).join(<span class="string">":"</span>)</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> formatNumber = <span class="function"><span class="params">n</span> =&gt;</span> &#123;</span><br><span class="line">  n = n.toString();</span><br><span class="line">  <span class="keyword">return</span> n[<span class="number">1</span>] ? n : <span class="string">"0"</span> + n;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> formateDay = <span class="function"><span class="params">timestamp</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(timestamp);</span><br><span class="line">  <span class="keyword">const</span> year = date.getFullYear();</span><br><span class="line">  <span class="keyword">const</span> month = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">const</span> day = date.getDate();</span><br><span class="line">  <span class="keyword">return</span> [year, month, day].map(formatNumber).join(<span class="string">"-"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  formatTime: formatTime,</span><br><span class="line">  formateDay: formateDay</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="五、Demo"><a href="#五、Demo" class="headerlink" title="五、Demo"></a>五、Demo</h2><p><a href="https://github.com/WinstonYa/vue-admin-framework" target="_blank" rel="noopener">github 传送门</a></p>
]]></content>
      <categories>
        <category>前端风格规范</category>
      </categories>
      <tags>
        <tag>前端风格规范</tag>
      </tags>
  </entry>
</search>
